name: build

inputs:
  REGISTRY_LOGIN_SERVER:
    description: "nome da aplicação"
    required: true
  REGISTRY_USERNAME:
    description: Ambiente
    required: true
  REGISTRY_PASSWORD:
    description: Ambiente
    required: true
  IMAGE: 
    description: "nome da imagem"
    required: true
  ACR: 
    description: "Registry"
    required: true
  tag: 
    description: "How to tag the image. Default: latest"
  git_token:
    description: "git_acess_token"

runs:
  using: "composite"
  steps:
    - name: "Login to ACR"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.REGISTRY_LOGIN_SERVER }}
        username: ${{ inputs.REGISTRY_USERNAME }}
        password: ${{ inputs.REGISTRY_PASSWORD }}
    - name: Set the tag
      shell: bash
      run: |
        if [ -z "${{inputs.tag}}" ]
        then
          echo "final_tag=latest" >> $GITHUB_ENV
        else
          echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
        fi

    - uses: docker/setup-buildx-action@v1

    - name: "Cache Docker layers"
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ inputs.REGISTRY_LOGIN_SERVER }}/${{ inputs.IMAGE }}:${{env.final_tag}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        build-args: |
          GIT_ACCESS_TOKEN=${{ inputs.git_token }}
